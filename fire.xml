<?xml version="1.0" encoding="utf-8"?>
<Map srs="+init=epsg:3857" background-color="#00000000">

<Datasource name="gis">
  <Parameter name="type">postgis</Parameter>
  <Parameter name="host">gis-db</Parameter>
  <Parameter name="port">5432</Parameter>
  <Parameter name="dbname">gis</Parameter>
  <Parameter name="user">maposmatic</Parameter>
  <Parameter name="password">secret</Parameter>
  <Parameter name="estimate_extent">false</Parameter>
  <Parameter name="extent">-20037508,-19929239,20037508,19929239</Parameter>
</Datasource>

<FileSource name="symbols">symbols</FileSource>

<Style name="fire_station">
  <Rule>
    <MinScaleDenominator>100000</MinScaleDenominator>
    <PointSymbolizer base="symbols" file="station.svg"/>
  </Rule>
  <Rule>
    <MaxScaleDenominator>100000</MaxScaleDenominator>
    <ShieldSymbolizer face-name="DejaVu Sans Bold" size="6" fill="#FF0000" dx="0" dy="14" unlock-image="True"
                      base="symbols" file="station.svg" shield-dy="-4" margin="0" allow-overlap="true" opacity="0.7" halo-radius="1"
     >[name]</ShieldSymbolizer> 
  </Rule>
</Style>

<Style name="fire_hydrant">
  <Rule>
    <MinScaleDenominator>20000</MinScaleDenominator>
    <PointSymbolizer base="symbols" file="lowzoom.svg" opacity="0.7"/>
  </Rule>
  <Rule>
    <MaxScaleDenominator>20000</MaxScaleDenominator>
    <Filter>[hydrant_type]='pillar'</Filter>
    <ShieldSymbolizer face-name="DejaVu Sans Bold" size="6" fill="#FF0000" dx="0" dy="14" unlock-image="True"
                      base="symbols" file="pillar.svg" shield-dy="-4" margin="0" allow-overlap="true" opacity="0.7" halo-radius="1"
     >[diameter]</ShieldSymbolizer> 
  </Rule>
  <Rule>
    <MaxScaleDenominator>20000</MaxScaleDenominator>
    <Filter>[hydrant_type]='wall'</Filter>
    <ShieldSymbolizer face-name="DejaVu Sans Bold" size="6" fill="#FF0000" dx="0" dy="10" unlock-image="True"
                      base="symbols" file="wall.svg" margin="0" allow-overlap="true" opacity="0.7" halo-radius="1"
     >[diameter]</ShieldSymbolizer> 
  </Rule>
  <Rule>
    <ElseFilter/>
    <ShieldSymbolizer face-name="DejaVu Sans Bold" size="6" fill="#FF0000" dx="0" dy="10" unlock-image="True" 
                      base="symbols" file="underground.svg" margin="0" allow-overlap="true" opacity="0.7" halo-radius="1"
     >[diameter]</ShieldSymbolizer>
  </Rule>
</Style>

<Style name="emergency_access_point">
  <Rule>
    <ShieldSymbolizer face-name="DejaVu Sans Bold" size="6" fill="#FF0000" dx="0" dy="14" unlock-image="True"
                       base="symbols" file="emergency_access_point.svg" margin="0" allow-overlap="true" opacity="0.7" halo-radius="1"
     >[name]</ShieldSymbolizer>
  </Rule>
</Style>

<Style name="defibrillator">
  <Rule>
    <PointSymbolizer base="symbols" file="defibrillator.svg"  opacity="0.7"/>
  </Rule>
</Style>

<Style name="pond">
  <Rule>
    <PointSymbolizer base="symbols" file="pond.svg"  opacity="0.7"/>
  </Rule>
</Style>

<Style name="tank">
  <Rule>
    <ShieldSymbolizer face-name="DejaVu Sans Bold" size="6" fill="#FF0000" dx="0" dy="10" unlock-image="True" 
                      base="symbols" file="water_tank.svg" margin="0" allow-overlap="true" opacity="0.7" halo-radius="1"
     >[volume]</ShieldSymbolizer>
  </Rule>
</Style>

<Layer name="fire_station" status="on"  srs="+init=epsg:3857">
  <StyleName>fire_station</StyleName>
  <Datasource base="gis">
    <Parameter name="table">
     (SELECT way, COALESCE(tags->'short_name', name) AS name FROM planet_osm_point WHERE amenity='fire_station'
	UNION
      SELECT way, COALESCE(tags->'short_name', name) AS name FROM planet_osm_polygon WHERE amenity='fire_station'
     ) AS way
    </Parameter>
    <Parameter name="geometry_field">way</Parameter>
  </Datasource>
</Layer>

<Layer name="fire_hydrant" status="on"  srs="+init=epsg:3857">
  <StyleName>fire_hydrant</StyleName>
  <Datasource base="gis">
    <Parameter name="table">
     (SELECT way,
        tags->'fire_hydrant:diameter' AS diameter,
        tags->'fire_hydrant:type'     AS hydrant_type
        FROM planet_osm_point
       WHERE tags->'emergency' = 'fire_hydrant'
     ) AS way
    </Parameter>
    <Parameter name="geometry_field">way</Parameter>
  </Datasource>
</Layer>

<Layer name="emergency_access_point" status="on"  srs="+init=epsg:3857">
  <StyleName>emergency_access_point</StyleName>
  <Datasource base="gis">
    <Parameter name="table">
     (SELECT way, COALESCE(name,ref) AS name
        FROM planet_osm_point
       WHERE highway = 'emergency_access_point'
     ) AS way
    </Parameter>
    <Parameter name="geometry_field">way</Parameter>
  </Datasource>
</Layer>

<Layer name="defibrillator" status="on"  srs="+init=epsg:3857">
  <StyleName>defibrillator</StyleName>
  <Datasource base="gis">
    <Parameter name="table">
     (SELECT way
        FROM planet_osm_point
       WHERE tags->'emergency' = 'defibrillator'
     ) AS way
    </Parameter>
    <Parameter name="geometry_field">way</Parameter>
  </Datasource>
</Layer>

<Layer name="suction" status="on"  srs="+init=epsg:3857">
  <StyleName>pond</StyleName>
  <Datasource base="gis">
    <Parameter name="table">
     (SELECT way
        FROM planet_osm_point
       WHERE tags->'emergency' = 'suction_point'
     ) AS way
    </Parameter>
    <Parameter name="geometry_field">way</Parameter>
  </Datasource>
</Layer>

<Layer name="pond" status="on"  srs="+init=epsg:3857">
  <StyleName>pond</StyleName>
  <Datasource base="gis">
    <Parameter name="table">
     (SELECT way FROM planet_osm_point WHERE tags->'emergency'='fire_water_pond'
        UNION
      SELECT way FROM planet_osm_polygon WHERE tags->'emergency'='fire_water_pond'
     ) AS way
    </Parameter>
    <Parameter name="geometry_field">way</Parameter>
  </Datasource>
</Layer>

<Layer name="tank" status="on"  srs="+init=epsg:3857">
  <StyleName>tank</StyleName>
  <Datasource base="gis">
    <Parameter name="table">
      (SELECT way, convert_volume(tags->'water_tank:volume') AS volume
         FROM planet_osm_point
        WHERE tags->'emergency'='water_tank'
      UNION
       SELECT way, convert_volume(tags->'water_tank:volume') AS volume
         FROM planet_osm_polygon
        WHERE tags->'emergency'='water_tank'
      ) AS way
    </Parameter>
    <Parameter name="geometry_field">way</Parameter>
  </Datasource>
</Layer>


</Map>
